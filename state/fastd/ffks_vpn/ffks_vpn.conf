# Log to stderr (will be picked up by systemd)
log to stderr level debug2;

hide ip addresses yes;
hide mac addresses yes;

interface "ffks-vpn";

method "salsa2012+gmac";
method "salsa2012+umac";

bind any:10000;

secret "{{ pillar.minions[grains.id].fastd_secret.rstrip() }}";

# Set the interface MTU for TAP mode with xsalsa20/aes128 over IPv4 with a base MTU of 1492 (PPPoE)
# (see MTU selection documentation)
mtu {{ pillar.minions[grains.id].fastd_mtu }};

# Gateway peer configuration, generated by salt
include peers from "gateways";

{% if pillar.minions[grains.id].gateway %}
# Node peer configuration (https://github.com/freifunkks/fastd-keys)
include peers from "nodes";
{% endif %}

on up "
  ip link set dev $INTERFACE up
  batctl if add $INTERFACE
  ip link set dev bat0 address {{ pillar.minions[grains.id].bat_mac }}
  ip link set dev bat0 mtu 1500
  ip link set dev bat0 up
  ip addr add {{ pillar.minions[grains.id].bat_ip }}/16 dev bat0
  ip addr add {{ pillar.minions[grains.id].bat_ip6 }}/64 dev bat0
{% if pillar.minions[grains.id].gateway %}
  systemctl restart openvpn@{{ pillar.minions[grains.id].gw_vpn }}.service
  systemctl restart {{ pillar.minions[grains.id].gw_dhcp }}.service
  systemctl restart {{ pillar.minions[grains.id].gw_dns }}.service
  batctl gw_mode server {{ pillar.minions[grains.id].bat_max_speed }}
  bash /opt/mesh-announce/respondd.sh
{% endif %}
";

on down "
{% if pillar.minions[grains.id].gateway %}
  batctl gw_mode off
  systemctl stop {{ pillar.minions[grains.id].gw_dhcp }}.service
  systemctl stop {{ pillar.minions[grains.id].gw_dns }}.service
{% endif %}
  ip link set bat0 down
  batctl if del $INTERFACE
  ip link set dev $INTERFACE down
";
